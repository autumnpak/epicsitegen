string_template = _{ SOI ~ ast ~ EOI }
string_mapping = _{SOI ~ ats ~ EOI}
ws = _{ (" "|"\t"|"\n"|"\r")+ }
ast = { (replacement | snippet | file_element | if_exists | for_element | lookup_catcher | plain_text)* }
value = { ident ~ (field | index)* }
values = { value ~ ws? ~ ("," ~ ws? ~ value ~ ws?)* ~ ("," ~ ws?)? }
values_with_pipes = { value_with_pipe ~ ("," ~ ws? ~ value_with_pipe)* ~ ("," ~ ws?)? }
value_with_pipe = { value ~ ws? ~ pipes }
ats = { at+ }
at = { "@" ~ ws? ~ value ~ ws? }
ident = { (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "-" | "_")+ }
field = { "." ~ ident }
index = { "[" ~ (value | numbers) ~ "]" }
numbers = { ASCII_DIGIT+ }
replacement = { "{{" ~ ws? ~ value ~ ws? ~ pipes ~ "}}" }
plain_text = { not_open_brace+ | ("{" ~ not_second_character+) }
not_open_brace = { !"{" ~ ANY }
not_second_character = { !("{" | "%" | "&" | "?") ~ ANY }
not_pipe_end = { !(" " | "}" | "|" | ")" | "%" | "$") ~ ANY }
lookup_catcher = { "{%?}" ~ ast ~ ("{&}" ~ ast)* ~ "{?%}" }
snippet = { "{%" ~ ws? ~ "snippet" ~ ws? ~ (file_at | filename) ~ ws? ~ pipes ~ "%}" }
file_element = { "{%" ~ ws? ~ "file" ~ ws? ~ (file_at_with_pipes | file_at | filename) ~ ws? ~ pipes ~ "%}" }
filename = { (!(ws | ",") ~ ANY)+ }
filenames = { filename ~ ws? ~ ("," ~ ws? ~ filename ~ ws?)* ~ ("," ~ ws?)? }
file_at = { "@" ~ ws? ~ value }
file_at_with_pipes = { "@" ~ ws? ~ "(" ~ ws? ~ value ~ ws? ~ pipes ~ ws? ~ ")" }
pipes = { (pipe_named | pipe_template)* }
pipe_named = { "|" ~ ws? ~ pipe_name ~ pipe_param* ~ ws? }
pipe_param = { (ws ~ not_pipe_end+) }
pipe_template = { "$" ~ ws? }
pipe_name = { not_pipe_end+ }
if_exists = { "{%" ~ ws? ~ "if-exists" ~ ws ~ value ~ ws? ~ "%}" ~ ast ~ if_exists_else? ~ if_exists_end }
if_exists_else = { "{%" ~ ws? ~ "else" ~ ws? ~ "%}" ~ ws? ~ ast }
if_exists_end = { "{%" ~ ws? ~ "endif" ~ ws? ~ "%}" }
for_element = { "{%" ~ ws? ~ "for" ~ ws ~ ident ~ for_grouping ~ for_sort_and_filter? ~ "%}" ~ ast ~ for_sep? ~ for_end }
for_grouping = { for_in? ~ ws? ~ for_in_file? ~ ws? ~ for_in_file_at? ~ ws? }
for_sort_and_filter = { for_sort? ~ ws? ~ for_filters? ~ ws? }
for_sort = { for_sort_type ~ ws ~ value ~ ws? }
for_sort_type = { ("sort-asc" | "sort-desc" | "sort") }
for_filters = { for_include? ~ ws? ~ for_exclude? ~ ws?}
for_include = { "includes" ~ ws ~ value }
for_exclude = { "excludes" ~ ws ~ value }
for_sep = { "{%" ~ ws? ~ "sep" ~ "erator"? ~ ws? ~ "%}" ~ ws? ~ ast }
for_end = { "{%" ~ ws? ~ "endfor" ~ ws? ~ "%}" } 
for_in = { ws? ~ "in" ~ ws ~ values_with_pipes }
for_in_file = { ws? ~ "in-file" ~ ws ~ filenames }
for_in_file_at = { ws? ~ "in-file-at" ~ ws ~ values }
